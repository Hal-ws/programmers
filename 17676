def solution(lines):
    l = len(lines)
    startTimes, endTimes, processingTimes = [], [], []
    for i in range(l):
        day, end, time = map(str, lines[i].split())
        endTimes.append([int(end[:2]), int(end[3:5]), int(end[6:8]), float('0' + end[8:12])])
        processingTimes.append(float(time[:len(time) - 1]))
        startTimes.append(getstarttime(endTimes[i], processingTimes[i]))
    for i in range(l):
        
    answer = 0
    return answer


def getstarttime(endTime, processingTime):
    processingTime = [processingTime // 1, round(processingTime % 1, 3)]
    endTime[2] = endTime[2] - processingTime[0]
    endTime[3] = round(endTime[3] - processingTime[1] + 0.001, 3)
    if endTime[3] > 0.999:
        endTime[3] = 0
        endTime[2] += 1
    if endTime[3] < 0:
        endTime[2] -= 1
        endTime[3] = round(endTime[3] + 1, 3)
    for i in range(3):
        if endTime[2 - i] < 0:
            endTime[1 - i] -= 1
            endTime[2 - i] = endTime[2 - i] + 60
        if endTime[2 - i] >= 60:
            endTime[1 - i] += 1
            endTime[2 - i] = 0
    print('endTime: %s' %endTime)
    return endTime

solution(["2016-09-15 03:10:34.999 1.000s", "2016-09-15 01:00:07.000 2s", "2016-09-15 20:59:58.299 0.8s"])
